name: Deploy - b/Stage a/Deploy

on:
  push:
    branches: [stage]
  pull_request:
    branches: [stage]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Cache node modules
        uses: actions/cache@v2
        id: cache
        with:
          path: node_modules
          key: npm-packages-${{ hashFiles('**/package-lock.json') }}

      - run: cp env/stage.env .env

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Copy the files from build folder to the S3 bucket
        run: aws s3 sync . ${{ secrets.AWS_S3_BUCKET_STAGE_URL }} --cache-control max-age=31536000
        working-directory: ./build/

      - name: Invalidate CloudFront
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_DISTRIBUTION_ID_STAGE }} --paths "/*"

      - name: Send slack message
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: Deploy Stage
          fields: repo,message,commit,author,workflow,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
